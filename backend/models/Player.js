const mongoose = require('mongoose');

// Define the schema for the player
const playerSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
  },
  birthdate: {
    type: String,
  },
  position: {
    type: String,
  },
  nationality: {
    type: String,
  },
  email: {
    type: String,
  },
  phone: {
    type: String,
  },
  stats: {
    appearances: {
        games: Number,
        minutes: Number,
        starts: Number,
        sub_off: Number,
        sub_on: Number,
      },
      defense: {
        clearances: Number, 
        interceptions: Number, 
        blockedShots: Number,
        blockedShots_per: Number,
        cleanSheets: Number, 
        goalsConceded: Number,
        goalsConceded_per: Number,
        goalsConcededInsideBox: Number,
        goalsConcededInsideBox_per: Number, 
        goalsConcededOutsideBox: Number, 
        goalsConcededOutsideBox_per: Number,
        ownGoals: Number,
        ownGoals_per: Number, 
        penaltyGoalsConceded: Number,
        penaltyGoalsConceded_per: Number,
        shotsOnTargetFaced: Number, 
        shotsOnTargetFacedInsideBox: Number,
        shotsOnTargetFacedInsideBox_per: Number, 
        shotsOnTargetFacedOutsideBox: Number,
        shotsOnTargetFacedOutsideBox_per: Number,
        clearances_per_90: Number, 
        interceptions_per_90: Number, 
        blockedShots_per_90: Number, 
        cleanSheets_per_90: Number, 
        goalsConceded_per_90: Number,
        goalsConcededInsideBox_per_90: Number, 
        goalsConcededOutsideBox_per_90: Number, 
        ownGoals_per_90: Number, 
        penaltyGoalsConceded_per_90: Number,
        shotsOnTargetFaced_per_90: Number, 
        shotsOnTargetFacedInsideBox_per_90: Number, 
        shotsOnTargetFacedOutsideBox_per_90: Number
      },
      discipline: {
        totalCards: Number, 
        yellowCards: Number, 
        redCards: Number,
        totalCards_per_90: Number, 
        yellowCards_per_90: Number, 
        redCards_per_90: Number
      },
      duels: {
        takeOnsOverrun: Number, 
        duelsContested: Number, 
        tacklesMade: Number, 
        foulsFromTackleAttempts: Number, 
        lastManTacklesMade: Number, 
        takeOnsCompleted: Number, 
        takeOnSuccessPercentage: Number, 
        foulsWon: Number, 
        fouls: Number, 
        penaltiesWon: Number, 
        aerialDuelsContested: Number, 
        aerialDuelsWon: Number, 
        aerialDuelSuccessPercentage: Number, 
        groundDuelsContested: Number, 
        groundDuelsWon: Number, 
        duelsWon: Number,
        duelsWon_per: Number,
        groundDuelSuccessPercentage: Number, 
        takeOnsOverrun_per_90: Number, 
        duelsContested_per_90: Number, 
        tacklesMade_per_90: Number,
        foulsFromTackleAttempts_per_90: Number,
        lastManTacklesMade_per_90: Number, 
        takeOnsCompleted_per_90: Number, 
        takeOnSuccessPercentage_per_90: Number,
        foulsWon_per_90: Number, 
        fouls_per_90: Number, 
        penaltiesWon_per_90: Number, 
        aerialDuelsContested_per_90: Number,
        aerialDuelsWon_per_90: Number, 
        aerialDuelSuccessPercentage_per_90: Number, 
        groundDuelsContested_per_90: Number,
        groundDuelsWon_per_90: Number, 
        duelsWon_per_90: Number, 
        groundDuelSuccessPercentage_per_90: Number
      },
      goalkeeping: {
        shotsfaced: Number,
        savesmade: Number,
        savesmade_in_box: Number,
        savesmade_out_box: Number,
        penalties_faced: Number,
        penalties_saved: Number,
        shotsfaced_per_90: Number,
        savesmade_per_90: Number,
        savesmade_in_box_per_90: Number,
        savesmade_out_box_per_90: Number,
        penalties_faced_per_90: Number,
        penalties_saved_per_90: Number
      },
      goals: {
        goals: Number,
        homegoals: Number,
        awaygoals: Number,
        winninggoals: Number,
        nonpenaltygoals: Number,
        penaltygoals: Number,
        goalsfrominsidebox: Number,
        goalsfromoutsidebox: Number,
        rightfootgoals: Number,
        leftfootgoals: Number,
        headergoals: Number,
        othergoals: Number,
        conv_rate: Number,
        goals_per_90: Number,
        homegoals_per_90: Number,
        awaygoals_per_90: Number,
        winninggoals_per_90: Number,
        nonpenaltygoals_per_90: Number,
        penaltygoals_per_90: Number,
        goalsfrominsidebox_per_90: Number,
        goalsfromoutsidebox_per_90: Number,
        rightfootgoals_per_90: Number,
        leftfootgoals_per_90: Number,
        headergoals_per_90: Number,
        othergoals_per_90: Number,
      },
      passing: {
        passatmpt: Number,
        passcomp: Number,
        assists: Number,
        chances: Number,
        pass_per: Number,
        oppass_atmpt: Number,
        oppass_comp: Number,
        oppass_per: Number,
        longpass_atmpt: Number,
        longpass_comp: Number,
        longpass_per: Number,
        crossatmpt: Number,
        crosscomp: Number,
        cross_per: Number,
        openPlayCrossesCompleted: Number,
        openPlayCrosses_per: Number,
        cornersCrosses: Number,
        cornersCrosses_per: Number,
        throughBalls: Number,
        throughBalls_per: Number,
        layOffsCompleted: Number,
        layOffsCompleted_per: Number,
        passesCompletedOppHalf: Number,
        passesCompletedOppHalf_per: Number,
        passesCompletedOwnHalf: Number,
        passesCompletedOwnHalf_per: Number,
        forwardPasses: Number,
        backwardPasses: Number,
        sidewaysPasses: Number,
        forwardPasses_per: Number,
        backwardPasses_per: Number,
        sidewaysPasses_per: Number,
        passatmpt_per_90: Number,
        passcomp_per_90: Number,
        assists_per_90: Number,
        chances_per_90: Number,
        pass_per_per_90: Number,
        oppass_atmpt_per_90: Number,
        oppass_comp_per_90: Number,
        oppass_per_per_90: Number,
        longpass_atmpt_per_90: Number,
        longpass_comp_per_90: Number,
        longpass_per_per_90: Number,
        crossatmpt_per_90: Number,
        crosscomp_per_90: Number,
        openPlayCrossesCompleted_per_90: Number,
        cornersCrosses_per_90: Number,
        throughBalls_per_90: Number,
        layOffsCompleted_per_90: Number,
        passesCompletedOppHalf_per_90: Number,
        passesCompletedOwnHalf_per_90: Number,
        forwardPasses_per_90: Number,
        backwardPasses_per_90: Number,
        sidewaysPasses_per_90: Number,
      },
      possession: {
        handballs: Number, 
        cornersWon: Number, 
        touches: Number, 
        ballRecoveries: Number, 
        possessionLost: Number,
        offsides: Number, 
        touchesInOppositionBox: Number,
        touchesInOppositionBox_per: Number,
        timesTackled: Number,
        handballs_per_90: Number, 
        cornersWon_per_90: Number, 
        touches_per_90: Number, 
        ballRecoveries_per_90: Number, 
        possessionLost_per_90: Number,
        offsides_per_90: Number, 
        touchesInOppositionBox_per_90: Number, 
        timesTackled_per_90: Number
      },
      shooting: {
        totalshots: Number,
        shotson_target: Number,
        shotsoff_target: Number,
        shots_blocked: Number,
        shots_setpieces: Number,
        penalties: Number,
        woodwork: Number,
        totalshots_per_90: Number,
        shotson_target_per_90: Number,
        shotsoff_target_per_90: Number,
        shots_blocked_per_90: Number,
        shots_setpieces_per_90: Number,
        penalties_per_90: Number,
        woodwork_per_90: Number,
        shots_accuracy: Number,
      },

  },
  // Reference to the scout who scouted this player (optional)
  scout: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Scout',
  }
});

// Create the model from the schema
const Player = mongoose.model('Player', playerSchema);

// Export the model
module.exports = Player;
